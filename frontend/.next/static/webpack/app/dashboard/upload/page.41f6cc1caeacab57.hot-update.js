"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/upload/page",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aiAPI: function() { return /* binding */ aiAPI; },\n/* harmony export */   authAPI: function() { return /* binding */ authAPI; },\n/* harmony export */   dashboardAPI: function() { return /* binding */ dashboardAPI; },\n/* harmony export */   documentAPI: function() { return /* binding */ documentAPI; },\n/* harmony export */   flashcardSetsAPI: function() { return /* binding */ flashcardSetsAPI; },\n/* harmony export */   flashcardsAPI: function() { return /* binding */ flashcardsAPI; },\n/* harmony export */   studyAPI: function() { return /* binding */ studyAPI; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Create an axios instance\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"/api\"\n});\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use((config)=>{\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n}, (error)=>Promise.reject(error));\n// Add a response interceptor to handle errors\napi.interceptors.response.use((response)=>response, (error)=>{\n    // Handle 401 Unauthorized errors by redirecting to login\n    if (error.response && error.response.status === 401) {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n});\n// Auth API\nconst authAPI = {\n    login: (username, password)=>api.post(\"/auth/login\", {\n            username,\n            password\n        }),\n    register: (username, email, password)=>api.post(\"/auth/register\", {\n            username,\n            email,\n            password\n        }),\n    getCurrentUser: ()=>api.get(\"/auth/me\")\n};\n// Flashcard Sets API\nconst flashcardSetsAPI = {\n    getAllSets: function() {\n        let skip = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;\n        return api.get(\"/flashcards/sets?skip=\".concat(skip, \"&limit=\").concat(limit));\n    },\n    getSetById: (setId)=>api.get(\"/flashcards/sets/\".concat(setId)),\n    createSet: (data)=>api.post(\"/flashcards/sets\", data),\n    updateSet: (setId, data)=>api.put(\"/flashcards/sets/\".concat(setId), data),\n    deleteSet: (setId)=>api.delete(\"/flashcards/sets/\".concat(setId))\n};\n// Flashcards API\nconst flashcardsAPI = {\n    getCardsBySetId: function(setId) {\n        let skip = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, limit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 100;\n        return api.get(\"/flashcards/sets/\".concat(setId, \"/cards?skip=\").concat(skip, \"&limit=\").concat(limit));\n    },\n    createCard: (setId, data)=>api.post(\"/flashcards/sets/\".concat(setId, \"/cards\"), data),\n    updateCard: (setId, cardId, data)=>api.put(\"/flashcards/sets/\".concat(setId, \"/cards/\").concat(cardId), data),\n    deleteCard: (setId, cardId)=>api.delete(\"/flashcards/sets/\".concat(setId, \"/cards/\").concat(cardId))\n};\n// Study API\nconst studyAPI = {\n    startSession: (setId)=>api.post(\"/study/sessions/start\", {\n            set_id: setId\n        }),\n    endSession: (sessionId)=>api.put(\"/study/sessions/\".concat(sessionId, \"/end\")),\n    getSessions: function() {\n        let skip = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;\n        return api.get(\"/study/sessions?skip=\".concat(skip, \"&limit=\").concat(limit));\n    },\n    getSessionById: (sessionId)=>api.get(\"/study/sessions/\".concat(sessionId)),\n    updateProgress: (sessionId, flashcardId, isCorrect, difficulty)=>api.post(\"/study/sessions/\".concat(sessionId, \"/progress\"), {\n            flashcard_id: flashcardId,\n            is_correct: isCorrect,\n            difficulty\n        }),\n    getFlashcardProgress: (flashcardId)=>api.get(\"/study/progress/flashcard/\".concat(flashcardId)),\n    getSetProgress: (setId)=>api.get(\"/study/progress/set/\".concat(setId)),\n    getSetStats: (setId)=>api.get(\"/study/stats/set/\".concat(setId))\n};\n// Document API\nconst documentAPI = {\n    uploadDocument: (formData)=>api.post(\"/documents/upload\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        }),\n    generateFlashcardsFromDocument: (documentId, title, description)=>api.post(\"/ai/generate-from-document\", {\n            document_id: documentId,\n            title,\n            description\n        })\n};\n// AI API\nconst aiAPI = {\n    generateFlashcardsFromText: (text, numCards)=>api.post(\"/ai/generate-flashcards\", {\n            text,\n            num_cards: numCards\n        })\n};\n// Dashboard API\nconst dashboardAPI = {\n    getSummary: ()=>api.get(\"/dashboard/summary\"),\n    getActivity: function() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        return api.get(\"/dashboard/activity?limit=\".concat(limit));\n    },\n    getSetStatistics: ()=>api.get(\"/dashboard/sets/stats\"),\n    getStudyTimeDistribution: ()=>api.get(\"/dashboard/study-time\")\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});